apply plugin: "java"

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets.main.resources.srcDirs = [ "res/",
                                      "libs/linux32", "libs/linux64",
                                      "libs/macosx32", "libs/macosx64",
                                      "libs/windows32", "libs/windows64",]
sourceSets{
    jnibuild{
        java.srcDirs = ["jnisrc/"]
    }
}

dependencies {
    jnibuildCompile "com.badlogicgames.gdx:gdx-jnigen:1.9.10"

    if(findProject(":arc-core") != null){
        jnibuildCompile project(":arc-core")
    }else{
        jnibuildCompile project(":Arc:arc-core")
    }
}

task deleteJniFolder(type: Delete) {
    delete "jni"
    delete "docs"
}

clean.dependsOn(deleteJniFolder)

task windowsNatives(dependsOn: classes, type: JavaExec) {
    main = 'jnibuild.NativesBuild'
    args = ['build-windows']
    classpath = sourceSets.jnibuild.runtimeClasspath
    standardInput = System.in
}

task linuxNatives(dependsOn: classes, type: JavaExec) {
    main = 'jnibuild.NativesBuild'
    args = ['build-linux']
    classpath = sourceSets.jnibuild.runtimeClasspath
    standardInput = System.in
}

task OSXNatives(dependsOn: classes, type: JavaExec) {
    main = 'jnibuild.NativesBuild'
    args = ['build-OSX']
    classpath = sourceSets.jnibuild.runtimeClasspath
    standardInput = System.in
}

task allNatives(dependsOn: classes, type: JavaExec){
    main = 'jnibuild.NativesBuild'
    args = ['build-windows', 'build-linux', 'build-OSX']
    classpath = sourceSets.jnibuild.runtimeClasspath
    standardInput = System.in
}